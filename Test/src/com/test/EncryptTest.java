package com.test;

/**
 * 加密解密工具类
 * 可以使用默认的key，也可以自己设置；但是用什么key加密就要用什么key解密
 * 
 * @author jiachengyu
 * 
 * @date 2014年9月2日
 */
public class EncryptTest {

	private static String EncryptKey = "This is a default key";

	private static byte[] keyBytes;

	static {
		keyBytes = EncryptKey.getBytes();
	}

	public static void setEncryptKey(String key) {
		EncryptKey = key;
		keyBytes = EncryptKey.getBytes();
	}

	/**
	 * 对字符串进行加密
	 * @param str
	 *            ： 需要加密的字符串
	 */
	public static String encryptStr(String eStr) {
		byte[] eBytes = eStr.getBytes();
		byte[] outBytes = new byte[eBytes.length];

		for (int i = 0; i < eBytes.length; i++) {
			outBytes[i] = (byte) ((eBytes[i] + keyBytes[i % keyBytes.length]) % 256);
		}
		return byteArr2HexStr(outBytes);
	}

	/**
	 * 对十六进制加密字符串解密
	 * @param dStr
	 *            ： 需要解密的字符串
	 */
	public static String decryptStr(String dStr) {
		byte[] dBytes = hexStr2ByteArr(dStr);
		byte[] outBytes = new byte[dBytes.length];

		for (int i = 0; i < dBytes.length; i++) {
			byte tempKeyByte = keyBytes[i % keyBytes.length];
			if (dBytes[i] < tempKeyByte) {
				outBytes[i] = (byte) (dBytes[i] + 256 - tempKeyByte);
			} else {
				outBytes[i] = (byte) (dBytes[i] - tempKeyByte);
			}
		}
		return new String(outBytes);
	}

	/**
	 * 将byte数组转换为表示16进制值的字符串， 如：byte[]{8,18}转换为：0813， 和public static byte[]
	 * hexStr2ByteArr(String strIn) 互为可逆的转换过程
	 * @param arrB
	 *            需要转换的byte数组
	 * @return 转换后的字符串
	 */
	public static String byteArr2HexStr(byte[] arrB) {
		int iLen = arrB.length;
		// 每个byte用两个字符才能表示，所以字符串的长度是数组长度的两倍
		StringBuffer sb = new StringBuffer(iLen * 2);
		for (int i = 0; i < iLen; i++) {
			int intTmp = arrB[i];
			// 把负数转换为正数
			while (intTmp < 0) {
				intTmp = intTmp + 256;
			}
			// 小于0F的数需要在前面补0
			if (intTmp < 16) {
				sb.append("0");
			}
			sb.append(Integer.toString(intTmp, 16));
		}
		return sb.toString();
	}

	/**
	 * 将表示16进制值的字符串转换为byte数组， 和public static String byteArr2HexStr(byte[] arrB)
	 * 互为可逆的转换过程
	 * @param strIn
	 *            需要转换的字符串
	 * @return 转换后的byte数组
	 */
	public static byte[] hexStr2ByteArr(String strIn) {
		byte[] arrB = strIn.getBytes();
		int iLen = arrB.length;

		// 两个字符表示一个字节，所以字节数组长度是字符串长度除以2
		byte[] arrOut = new byte[iLen / 2];
		for (int i = 0; i < iLen; i = i + 2) {
			String strTmp = new String(arrB, i, 2);
			arrOut[i / 2] = (byte) Integer.parseInt(strTmp, 16);
		}
		return arrOut;
	}

}
